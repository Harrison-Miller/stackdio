## stackd.io config file
#
# This file will be run through jinja templating when the server starts up.
# There are a few variables that will be available, such as "user" seen below.

##
# list of the available cloud provider driver classes
cloud_providers:
  - stackdio.api.cloud.providers.aws.AWSCloudProvider

##
# Root directory for stackdio to store files, logs, etc.
# It will be created if it doesn't already exist.
# Can be absolute or relative.
storage_dir: storage

##
# Root directory for stackdio to store log files.
# It will be created if it doesn't already exist.
# Can be absolute or relative.
log_dir: logs

##
# The user that will own the storage_dir above, run
# the salt processes, celery workers, and Django dev
# server. If you decide to use a wsgi server to serve
# the application, then it will need to be running as
# this user as well.
user: {{ user }}

##
# When bootstrapping salt minions, which bootstrap script
# and arguments should salt-cloud use? Typically,
# 'bootstrap-salt' will be the script to use, and the
# the args would be empty. However, if you need special
# minion revisions, verbose logging, etc, you can control
# that here. See http://bootstrap.saltstack.org for the
# allowed arguments.
salt_bootstrap_script: bootstrap-salt
salt_bootstrap_args: -K -D git v{salt_version}

##
# This should be a unique and unpredictable value that is
# used by Django for cryptographic signing. For more info,
# see the Django settings docs.
django_secret_key: "{{ random_secret_key }}"

##
# The DSN for the database stackdio will use. The host
# must running (for non-sqlite servers), the database
# must already be created, and the user/pass must have
# access to the database.
# Example: mysql://user:pass@host:port/db_name
database_url: sqlite:///storage/stackdio.db

##
# Should ssh users be created on launched hosts by default?
create_ssh_users: true
